
/*
 * Template for HTTP DELETE CRUD requests.
 * This file was automatically generated using Magic's CRUDifier.
 */
.arguments
   subscription:string
   meta:string
.description:Deletes one item from your subscriptions table in your [generic|stripe] database matching the specified argument(s)
.type:crud-delete

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root, admin, guest

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/subscription

// Retrieving currently authenticated user to ensure we only return subscriptions for that user.
auth.ticket.get

// Opening up our database connection.
data.connect:[generic|stripe]

   // Invoking Stripe to cancel subscription.
   unwrap:x:+/*
   signal:stripe.subscriptions.cancel
      subscription:x:@.arguments/*/subscription

   // Invoking any callback sink methods, but only if meta information was supplied.
   if
      exists:x:@.arguments/*/meta
      .lambda

         // Retrieving all slots that are interested in callback notifications.
         slots.vocabulary:payments.subscriptions.unsubscribed.
         
         // Invoking all slots returned above.
         for-each:x:-/*
            add:x:./*/signal
               get-nodes:x:@.arguments/*/meta
            signal:x:@.dp/#
               type:subscription

   // Checking if we've got a notifications callback, and if so, invoking it.
   config.get:"magic:stripe:notifications"
   unwrap:x:+/*/username
   signal:x:@config.get
      type:subscription
      content:Your subscription was successfully deleted
      username:x:@auth.ticket.get

   // Deleting item from database.
   data.delete
      table:subscriptions
      where
         and
            username.eq:x:@auth.ticket.get
            subscription.eq:x:@.arguments/*/subscription

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
      subscription:x:@signal/@signal
