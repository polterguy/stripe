
/*
 * Slot responsible for attaching a payment method to a customer.
 *
 * Requires [payment_method], [customer_id].
 */
slots.create:strips.payment_method.attach

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/payment_method
   validators.mandatory:x:@.arguments/*/customer_id

   // Retrieving token to use for invocations towards Stripe.
   .token
   set-value:x:-
      strings.concat
         .:"Bearer "
         config.get:"magic:stripe:token"

   // Invoking Stripe REST API.
   strings.concat
      .:"https://api.stripe.com/v1/payment_methods/"
      get-value:x:@.arguments/*/payment_method
      .:"/attach"
   http.post:x:-
      headers
         Content-Type:application/x-www-form-urlencoded
         Authorization:x:@.token
      payload
         customer:x:@.arguments/*/customer_id
      convert:true

   // Sanity checking above invocation.
   if
      mte
         get-value:x:@http.post
         .:int:400
      .lambda

         // Oops, something went wrong ...!!
         lambda2hyper:x:@http.post
         log.error:Something went wrong while invoking Stripe API
            result:x:@lambda2hyper
            provider:Stripe
         throw:We could not process your payment
            public:true
            status:500

   // Returning customer ID to caller.
   return:x:@http.post/*/content/*/id
